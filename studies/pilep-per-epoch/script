

pu_B  <- read.csv("MyDataPileupHistogram_SingleMuon2016B_03Feb2017_ver2.csv", header=T)
pu_C  <- read.csv("MyDataPileupHistogram_SingleMuon2016C_03Feb2017_v1.csv",   header=T)
pu_D  <- read.csv("MyDataPileupHistogram_SingleMuon2016D_03Feb2017_v1.csv",   header=T)
pu_E  <- read.csv("MyDataPileupHistogram_SingleMuon2016E_03Feb2017_v1.csv",   header=T)
pu_F  <- read.csv("MyDataPileupHistogram_SingleMuon2016F_03Feb2017_v1.csv",   header=T)
pu_G  <- read.csv("MyDataPileupHistogram_SingleMuon2016G_03Feb2017_v1.csv",   header=T)
pu_H  <- read.csv("MyDataPileupHistogram_SingleMuon2016H_03Feb2017_ver2.csv", header=T)
pu_H3 <- read.csv("MyDataPileupHistogram_SingleMuon2016H_03Feb2017_ver3.csv", header=T)


## degenerative R does not do the following
#add_norm_pu <-function(pu_df) {
#pu_df$pu_norm     = pu_df$pu     / sum(pu_df$pu)
#pu_df$pu_err_norm = pu_df$pu_err / sum(pu_df$pu)
#}


pu_BCDEF <- pu_B + pu_C + pu_D + pu_E + pu_F
pu_GH    <- pu_G + pu_H + pu_H3


pu_B$pu_norm     <- pu_B$pu     / sum(pu_B$pu)
pu_B$pu_norm_err <- pu_B$pu_err / sum(pu_B$pu)

pu_C$pu_norm     <- pu_C$pu     / sum(pu_C$pu)
pu_C$pu_norm_err <- pu_C$pu_err / sum(pu_C$pu)

pu_D$pu_norm     <- pu_D$pu     / sum(pu_D$pu)
pu_D$pu_norm_err <- pu_D$pu_err / sum(pu_D$pu)

pu_E$pu_norm     <- pu_E$pu     / sum(pu_E$pu)
pu_E$pu_norm_err <- pu_E$pu_err / sum(pu_E$pu)

pu_F$pu_norm     <- pu_F$pu     / sum(pu_F$pu)
pu_F$pu_norm_err <- pu_F$pu_err / sum(pu_F$pu)

pu_G$pu_norm     <- pu_G$pu     / sum(pu_G$pu)
pu_G$pu_norm_err <- pu_G$pu_err / sum(pu_G$pu)

pu_H$pu_norm     <- pu_H$pu     / sum(pu_H$pu)
pu_H$pu_norm_err <- pu_H$pu_err / sum(pu_H$pu)

pu_H3$pu_norm     <- pu_H3$pu     / sum(pu_H3$pu)
pu_H3$pu_norm_err <- pu_H3$pu_err / sum(pu_H3$pu)


pu_BCDEF$pu_norm     <- pu_BCDEF$pu     / sum(pu_BCDEF$pu)
pu_BCDEF$pu_norm_err <- pu_BCDEF$pu_err / sum(pu_BCDEF$pu)

pu_GH$pu_norm     <- pu_GH$pu     / sum(pu_GH$pu)
pu_GH$pu_norm_err <- pu_GH$pu_err / sum(pu_GH$pu)



library(ggplot2)

ggplot(pu_BCDEF, aes(bin_n, pu_norm)) + geom_point() + geom_point(data=pu_GH, mapping=aes(x=bin_n, y=pu_norm), color="red")


old_pu_data_mc_ratio <- read.csv("pileup_norm_values_data_mc_8-8-2016.csv", header=T)

ggplot(old_pu_data_mc_ratio, aes(x=1:nrow(old_pu_data_mc_ratio), norm_value_ratio)) + geom_point()

main_ratio_now = c(0.360609416811339, 0.910848525427002, 1.20629960507795, 0.965997726573782, 1.10708082813183, 1.14843491548622, 0.786526251164482, 0.490577792661333, 0.740680941110478,
0.884048630953726,
0.964813189764159, 1.07045369167689, 1.12497267309738, 1.17367530613108, 1.20239808206413, 1.20815108390021, 1.20049333094509, 1.18284686347315, 1.14408796655615,
1.0962284704313, 1.06549162803223, 1.05151011089581, 1.05159666626121, 1.05064452078328, 1.0491726301522, 1.05772537082991, 1.07279673875566, 1.0837536468865, 1.09536667397119,
1.10934472980173, 1.09375894592864, 1.08263679568271, 1.04289345879947, 0.9851490341672, 0.909983816540809, 0.821346330143864, 0.71704523475871, 0.609800913869359, 0.502935245638477,
0.405579825620816, 0.309696044611377, 0.228191137503131, 0.163380359253309, 0.113368437957202, 0.0772279997453792, 0.0508111733313502, 0.0319007262683943, 0.0200879459309245, 0.0122753366005436,
0.00739933885813127, 0.00437426967257811, 0.00260473545284139, 0.00157047254226743, 0.000969500595715493, 0.000733193118123283, 0.000669817107713128, 0.000728548958604492, 0.000934559691182011, 0.00133719688378802,
0.00186652283903214, 0.00314422244976771, 0.00406954793369611, 0.00467888840511915, 0.00505224284441512, 0.00562827194936864, 0.0055889504870752, 0.00522867039470319, 0.00450752163476433, 0.00395300774604375,
0.00330577167682956, 0.00308353042577215, 0.00277846504893301, 0.00223943190687725, 0.00196650068765464, 0.00184742734258922)

main_ratio_now_df = data.frame(nvtx=1:length(main_ratio_now), norm_value_ratio=main_ratio_now)

ggplot(old_pu_data_mc_ratio, aes(x=1:nrow(old_pu_data_mc_ratio), norm_value_ratio)) + geom_point() +
  geom_point(data=main_ratio_now_df, mapping=aes(x=nvtx, y=norm_value_ratio), color="red")

# quite different
# so, where is the needed MC PU?





main_pu_data_now <- read.csv("used_pileup_data/data-pu-69-2-up-down-N-MC-Summer16-normalized-averages.csv", header=T)

main_pu_data_now$pileup_normalized_average

the bins match

pu_per_epoch_nominal <- data.frame(
    nbin=main_pu_data_now$nbin[1:100],
    pu_mc=main_pu_data_now$pileup_normalized_average[1:100],
    pu_BCDEF_nom = pu_BCDEF$pu_norm,
    pu_GH_nom    = pu_GH$pu_norm)

sum(pu_per_epoch_nominal$pu_mc)
sum(pu_per_epoch_nominal$pu_BCDEF_nom)
sum(pu_per_epoch_nominal$pu_GH_nom)

pu_per_epoch_nominal$ratio_BCDEF <- pu_per_epoch_nominal$pu_BCDEF_nom / pu_per_epoch_nominal$pu_mc
pu_per_epoch_nominal$ratio_GH    <- pu_per_epoch_nominal$pu_GH_nom    / pu_per_epoch_nominal$pu_mc


ggplot(pu_per_epoch_nominal, aes(nbin, ratio_BCDEF)) + geom_point() + geom_point(mapping=aes(y=ratio_GH), color="red")

-- strange looking distrs


compare with my ad-hoc distrs

from array import array

pileup_ratio = array('d', [
0.360609416811339, 0.910848525427002, 1.20629960507795, 0.965997726573782, 1.10708082813183, 1.14843491548622, 0.786526251164482, 0.490577792661333, 0.740680941110478,
0.884048630953726,
0.964813189764159, 1.07045369167689, 1.12497267309738, 1.17367530613108, 1.20239808206413, 1.20815108390021, 1.20049333094509, 1.18284686347315, 1.14408796655615,
1.0962284704313, 1.06549162803223, 1.05151011089581, 1.05159666626121, 1.05064452078328, 1.0491726301522, 1.05772537082991, 1.07279673875566, 1.0837536468865, 1.09536667397119,
1.10934472980173, 1.09375894592864, 1.08263679568271, 1.04289345879947, 0.9851490341672, 0.909983816540809, 0.821346330143864, 0.71704523475871, 0.609800913869359, 0.502935245638477,
0.405579825620816, 0.309696044611377, 0.228191137503131, 0.163380359253309, 0.113368437957202, 0.0772279997453792, 0.0508111733313502, 0.0319007262683943, 0.0200879459309245, 0.0122753366005436,
0.00739933885813127, 0.00437426967257811, 0.00260473545284139, 0.00157047254226743, 0.000969500595715493, 0.000733193118123283, 0.000669817107713128, 0.000728548958604492, 0.000934559691182011, 0.00133719688378802,
0.00186652283903214, 0.00314422244976771, 0.00406954793369611, 0.00467888840511915, 0.00505224284441512, 0.00562827194936864, 0.0055889504870752, 0.00522867039470319, 0.00450752163476433, 0.00395300774604375,
0.00330577167682956, 0.00308353042577215, 0.00277846504893301, 0.00223943190687725, 0.00196650068765464, 0.00184742734258922,])


pileup_ratio_ele = array('d', [
   0.413231   ,    1.01701    ,    1.19502     ,   0.883906   ,    1.05852    ,    1.11823    ,    0.789439   ,    0.515477   ,    0.81338    ,    0.990148   ,
   1.0919     ,    1.21784    ,    1.28268     ,   1.33936    ,    1.37267    ,    1.38001    ,    1.37224    ,    1.35253    ,    1.30805    ,    1.25303    ,
   1.21761    ,    1.20085    ,    1.1987      ,   1.19257    ,    1.1807     ,    1.17079    ,    1.15238    ,    1.10667    ,    1.03375    ,    0.935086   ,
   0.793376   ,    0.65125    ,    0.502727    ,   0.369298   ,    0.25859    ,    0.173207   ,    0.110361   ,    0.0677957  ,    0.0403186  ,    0.0236369  ,
   0.0133546  ,    0.00746494 ,    0.00417626  ,   0.00233773 ,    0.0013288  ,    0.000757718,    0.000432788,    0.000266239,    0.000177605,    0.000137241,
   0.000125696,    0.000137018,    0.000167806 ,   0.000215108,    0.000313214,    0.000464376,    0.000669855,    0.000981399,    0.00148275 ,    0.00211313 ,
   0.0035872  ,    0.00465614 ,    0.005359    ,   0.00578897 ,    0.00645001 ,    0.00640537 ,    0.00599263 ,    0.00516618 ,    0.00453067 ,    0.00378886 ,
   0.00353415 ,    0.00318451 ,    0.0025667   ,   0.00225388 ,    0.00211741 ,])

def calc_pu_per_runs(pu_ele, pu_gld, ele_B = 19128.209 / (19128.209 + 12210.15), ele_H = 12210.15  / (19128.209 + 12210.15), gld_B = 19713.888 / (19713.888 + 16146.177), gld_H = 16146.177 / (19713.888 + 16146.177)):                                                                                                           
    pu_H = (pu_ele    / ele_B - pu_gld / gld_B) / (ele_H / ele_B - gld_H / gld_B)
    pu_B = (pu_ele    / ele_H - pu_gld / gld_H) / (ele_B / ele_H - gld_B / gld_H)
    return pu_B, pu_H

for nbin in range(1,100):
    weight_pu_el    = pileup_ratio_ele [nbin]
    weight_pu_mu    = pileup_ratio     [nbin]

    weight_pu_bcdef,    weight_pu_gh = calc_pu_per_runs(weight_pu_el, weight_pu_mu)

    print(nbin, weight_pu_bcdef,    weight_pu_gh)

1 1.6992075423161452 -0.051708825625365225
2 1.1225368426830473 1.308570855815741
3 0.3563815440862405 1.7103166538682726
4 0.7464663314011146 1.5473778594182883
5 0.9241321015538236 1.4223003978197857
6 0.8081564312053119 0.7601165972417765
7 0.6754802226415499 0.26481872935130973
8 1.2805468277273822 0.08152455853233985
9 1.6719464499159513 -0.07794561440017997
10 1.9085645193315788 -0.18747245723099148
11 2.16494984105574 -0.26588583348042355
12 2.296113086258025 -0.3049466779243942
13 2.4040559399481523 -0.32857417450069876
14 2.4668436106108276 -0.34144338157586374
15 2.484381719213227 -0.3500795614550124
16 2.475890415572172 -0.3567195796940552
17 2.442920079609487 -0.35565616759801894
18 2.3616760606632696 -0.34254229380586776
19 2.260642399257188 -0.32547809072639955
20 2.195128256174833 -0.3137531286616255
21 2.16051362304614 -0.3025423703905189
22 2.1439914359635224 -0.28217715163371204
23 2.1045883522612234 -0.2361821163858197
24 2.025899718809274 -0.14337520531074763
25 1.8973474677910531 0.03257768529313485
26 1.6637849653960002 0.3512218601137216
27 1.2539313284221927 0.8759729596133262
28 0.6377989855862221 1.6540399847642144
29 -0.1847070103743127 2.6893342884468296
30 -1.1368958645387295 3.8173063900211335
31 -2.1208574239603135 4.993985361642939
32 -2.9684025422072167 5.94053827581676
33 -3.5881834086896642 6.569019665911586
34 -3.927290636186084 6.81611793028918
35 -3.991760186835204 6.697972283630905
36 -3.788214218355269 6.21780125085034
37 -3.415149749951952 5.524117571744411
38 -2.9324729890250762 4.697442290398055
39 -2.4307423954231626 3.868624891804117
40 -1.8909464283479742 2.9965995289447704
41 -1.4109297278122297 2.2294974007312707
42 -1.0188751404643208 1.6068708219688734
43 -0.7111496852293513 1.1200747272831475
44 -0.48640225063133297 0.7653997960373726
45 -0.32088762791122866 0.5046417325671659
46 -0.2017813413232841 0.3172179321996052
47 -0.1271087791709229 0.1998097310088789
48 -0.07756286345794618 0.1219644731729138
49 -0.04652926707934973 0.073244182343226
50 -0.027175794766209262 0.04289573743172862
51 -0.015720625163212446 0.024979326462496284
52 -0.008845780818313756 0.014288334617613271
53 -0.004632646581486433 0.007809516161683523
54 -0.002385587268164361 0.004541109210698721
55 -0.0008557961183350031 0.0025325347200390405
56 0.0002926854620876628 0.0012607222497570156
57 0.001282390122136752 0.0005098715338037347
58 0.002418079681088705 1.747876059932872e-05
59 0.0036978366914481825 -0.0003694439894857413
60 0.006433790039232165 -0.0008722185335766602
61 0.008425602204478888 -0.0012490340449439945
62 0.009729422136604715 -0.0014876274408751455
63 0.010523205813124277 -0.0016276016300558166
64 0.011730528953068102 -0.0018223593126413587
65 0.011651711834045172 -0.0018134580313558313
66 0.010901862537119021 -0.0016980884596104878
67 0.009398742893432448 -0.001464479544004024
68 0.008242748901718569 -0.001284608359116248
69 0.006893203342196988 -0.001074350382943906
70 0.006429847966651798 -0.0010022001600709745
71 0.0057937697978875016 -0.0009031110979627546
72 0.004669736809773338 -0.0007278809537178234
73 0.0041005900366028 -0.000639143881159201
74 0.003852328491801564 -0.0006004831879743592

ok, this might explain things

calculated_pu_weights <-read.csv("calculated_per_epoch_pu.csv", header=T)

nbin,weight_pu_bcdef,weight_pu_gh

ggplot(pu_per_epoch_nominal, aes(nbin, ratio_BCDEF)) + geom_point() +
    geom_point(mapping=aes(y=ratio_GH), color="red") +
    geom_point(data=calculated_pu_weights, mapping=aes(x=nbin, y=weight_pu_bcdef), color="green") +
    geom_point(data=calculated_pu_weights, mapping=aes(x=nbin, y=weight_pu_gh), color="blue")




